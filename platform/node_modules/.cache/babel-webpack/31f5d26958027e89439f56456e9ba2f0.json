{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, Inject, ViewChild, Output, forwardRef, Input, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"editorContainer\"];\nconst NGX_MONACO_EDITOR_CONFIG = new InjectionToken('NGX_MONACO_EDITOR_CONFIG');\nlet loadedMonaco = false;\nlet loadPromise;\n\nclass BaseEditor {\n  constructor(config) {\n    this.config = config;\n    this.onInit = new EventEmitter();\n  }\n\n  ngAfterViewInit() {\n    if (loadedMonaco) {\n      // Wait until monaco editor is available\n      loadPromise.then(() => {\n        this.initMonaco(this._options);\n      });\n    } else {\n      loadedMonaco = true;\n      loadPromise = new Promise(resolve => {\n        const baseUrl = (this.config.baseUrl || './assets') + '/monaco-editor/min/vs';\n\n        if (typeof window.monaco === 'object') {\n          resolve();\n          return;\n        }\n\n        const onGotAmdLoader = () => {\n          // Load monaco\n          window.require.config({\n            paths: {\n              'vs': `${baseUrl}`\n            }\n          });\n\n          window.require([`vs/editor/editor.main`], () => {\n            if (typeof this.config.onMonacoLoad === 'function') {\n              this.config.onMonacoLoad();\n            }\n\n            this.initMonaco(this._options);\n            resolve();\n          });\n        }; // Load AMD loader if necessary\n\n\n        if (!window.require) {\n          const loaderScript = document.createElement('script');\n          loaderScript.type = 'text/javascript';\n          loaderScript.src = `${baseUrl}/loader.js`;\n          loaderScript.addEventListener('load', onGotAmdLoader);\n          document.body.appendChild(loaderScript);\n        } else {\n          onGotAmdLoader();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._windowResizeSubscription) {\n      this._windowResizeSubscription.unsubscribe();\n    }\n\n    if (this._editor) {\n      this._editor.dispose();\n\n      this._editor = undefined;\n    }\n  }\n\n}\n\nBaseEditor.ɵfac = function BaseEditor_Factory(t) {\n  return new (t || BaseEditor)(i0.ɵɵdirectiveInject(NGX_MONACO_EDITOR_CONFIG));\n};\n\nBaseEditor.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BaseEditor,\n  selectors: [[\"ng-component\"]],\n  viewQuery: function BaseEditor_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._editorContainer = _t.first);\n    }\n  },\n  outputs: {\n    onInit: \"onInit\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function BaseEditor_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseEditor, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGX_MONACO_EDITOR_CONFIG]\n      }]\n    }];\n  }, {\n    _editorContainer: [{\n      type: ViewChild,\n      args: ['editorContainer', {\n        static: true\n      }]\n    }],\n    onInit: [{\n      type: Output\n    }]\n  });\n})();\n\nclass EditorComponent extends BaseEditor {\n  constructor(zone, editorConfig) {\n    super(editorConfig);\n    this.zone = zone;\n    this.editorConfig = editorConfig;\n    this._value = '';\n\n    this.propagateChange = _ => {};\n\n    this.onTouched = () => {};\n  }\n\n  set options(options) {\n    this._options = Object.assign({}, this.config.defaultOptions, options);\n\n    if (this._editor) {\n      this._editor.dispose();\n\n      this.initMonaco(options);\n    }\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set model(model) {\n    this.options.model = model;\n\n    if (this._editor) {\n      this._editor.dispose();\n\n      this.initMonaco(this.options);\n    }\n  }\n\n  writeValue(value) {\n    this._value = value || ''; // Fix for value change while dispose in process.\n\n    setTimeout(() => {\n      if (this._editor && !this.options.model) {\n        this._editor.setValue(this._value);\n      }\n    });\n  }\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  initMonaco(options) {\n    const hasModel = !!options.model;\n\n    if (hasModel) {\n      const model = monaco.editor.getModel(options.model.uri || '');\n\n      if (model) {\n        options.model = model;\n        options.model.setValue(this._value);\n      } else {\n        options.model = monaco.editor.createModel(options.model.value, options.model.language, options.model.uri);\n      }\n    }\n\n    this._editor = monaco.editor.create(this._editorContainer.nativeElement, options);\n\n    if (!hasModel) {\n      this._editor.setValue(this._value);\n    }\n\n    this._editor.onDidChangeModelContent(e => {\n      const value = this._editor.getValue(); // value is not propagated to parent when executing outside zone.\n\n\n      this.zone.run(() => {\n        this.propagateChange(value);\n        this._value = value;\n      });\n    });\n\n    this._editor.onDidBlurEditorWidget(() => {\n      this.onTouched();\n    }); // refresh layout on resize event.\n\n\n    if (this._windowResizeSubscription) {\n      this._windowResizeSubscription.unsubscribe();\n    }\n\n    this._windowResizeSubscription = fromEvent(window, 'resize').subscribe(() => this._editor.layout());\n    this.onInit.emit(this._editor);\n  }\n\n}\n\nEditorComponent.ɵfac = function EditorComponent_Factory(t) {\n  return new (t || EditorComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(NGX_MONACO_EDITOR_CONFIG));\n};\n\nEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: EditorComponent,\n  selectors: [[\"ngx-monaco-editor\"]],\n  inputs: {\n    options: \"options\",\n    model: \"model\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => EditorComponent),\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"editor-container\"], [\"editorContainer\", \"\"]],\n  template: function EditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n  },\n  styles: [\"[_nghost-%COMP%] {\\n          display: block;\\n          height: 200px;\\n      }\\n\\n      .editor-container[_ngcontent-%COMP%] {\\n          width: 100%;\\n          height: 98%;\\n      }\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-monaco-editor',\n      template: '<div class=\"editor-container\" #editorContainer></div>',\n      styles: [`\n      :host {\n          display: block;\n          height: 200px;\n      }\n\n      .editor-container {\n          width: 100%;\n          height: 98%;\n      }\n  `],\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => EditorComponent),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGX_MONACO_EDITOR_CONFIG]\n      }]\n    }];\n  }, {\n    options: [{\n      type: Input,\n      args: ['options']\n    }],\n    model: [{\n      type: Input,\n      args: ['model']\n    }]\n  });\n})();\n\nclass DiffEditorComponent extends BaseEditor {\n  constructor(editorConfig) {\n    super(editorConfig);\n    this.editorConfig = editorConfig;\n  }\n\n  set options(options) {\n    this._options = Object.assign({}, this.config.defaultOptions, options);\n\n    if (this._editor) {\n      this._editor.dispose();\n\n      this.initMonaco(options);\n    }\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set originalModel(model) {\n    this._originalModel = model;\n\n    if (this._editor) {\n      this._editor.dispose();\n\n      this.initMonaco(this.options);\n    }\n  }\n\n  set modifiedModel(model) {\n    this._modifiedModel = model;\n\n    if (this._editor) {\n      this._editor.dispose();\n\n      this.initMonaco(this.options);\n    }\n  }\n\n  initMonaco(options) {\n    if (!this._originalModel || !this._modifiedModel) {\n      throw new Error('originalModel or modifiedModel not found for ngx-monaco-diff-editor');\n    }\n\n    this._originalModel.language = this._originalModel.language || options.language;\n    this._modifiedModel.language = this._modifiedModel.language || options.language;\n    let originalModel = monaco.editor.createModel(this._originalModel.code, this._originalModel.language);\n    let modifiedModel = monaco.editor.createModel(this._modifiedModel.code, this._modifiedModel.language);\n    this._editorContainer.nativeElement.innerHTML = '';\n    const theme = options.theme;\n    this._editor = monaco.editor.createDiffEditor(this._editorContainer.nativeElement, options);\n    options.theme = theme;\n\n    this._editor.setModel({\n      original: originalModel,\n      modified: modifiedModel\n    }); // refresh layout on resize event.\n\n\n    if (this._windowResizeSubscription) {\n      this._windowResizeSubscription.unsubscribe();\n    }\n\n    this._windowResizeSubscription = fromEvent(window, 'resize').subscribe(() => this._editor.layout());\n    this.onInit.emit(this._editor);\n  }\n\n}\n\nDiffEditorComponent.ɵfac = function DiffEditorComponent_Factory(t) {\n  return new (t || DiffEditorComponent)(i0.ɵɵdirectiveInject(NGX_MONACO_EDITOR_CONFIG));\n};\n\nDiffEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DiffEditorComponent,\n  selectors: [[\"ngx-monaco-diff-editor\"]],\n  inputs: {\n    options: \"options\",\n    originalModel: \"originalModel\",\n    modifiedModel: \"modifiedModel\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"editor-container\"], [\"editorContainer\", \"\"]],\n  template: function DiffEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n  },\n  styles: [\"[_nghost-%COMP%] {\\n      display: block;\\n      height: 200px;\\n    }\\n\\n    .editor-container[_ngcontent-%COMP%] {\\n      width: 100%;\\n      height: 98%;\\n    }\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DiffEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-monaco-diff-editor',\n      template: '<div class=\"editor-container\" #editorContainer></div>',\n      styles: [`\n    :host {\n      display: block;\n      height: 200px;\n    }\n\n    .editor-container {\n      width: 100%;\n      height: 98%;\n    }\n  `]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGX_MONACO_EDITOR_CONFIG]\n      }]\n    }];\n  }, {\n    options: [{\n      type: Input,\n      args: ['options']\n    }],\n    originalModel: [{\n      type: Input,\n      args: ['originalModel']\n    }],\n    modifiedModel: [{\n      type: Input,\n      args: ['modifiedModel']\n    }]\n  });\n})();\n\nclass MonacoEditorModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: MonacoEditorModule,\n      providers: [{\n        provide: NGX_MONACO_EDITOR_CONFIG,\n        useValue: config\n      }]\n    };\n  }\n\n}\n\nMonacoEditorModule.ɵfac = function MonacoEditorModule_Factory(t) {\n  return new (t || MonacoEditorModule)();\n};\n\nMonacoEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MonacoEditorModule\n});\nMonacoEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MonacoEditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [EditorComponent, DiffEditorComponent],\n      exports: [EditorComponent, DiffEditorComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DiffEditorComponent, EditorComponent, MonacoEditorModule, NGX_MONACO_EDITOR_CONFIG };","map":{"version":3,"sources":["/Users/laurenzhinterholzer/Documents/WIN/WIN 2022S/BAC WIN/platform/node_modules/ngx-monaco-editor/fesm2015/ngx-monaco-editor.js"],"names":["i0","InjectionToken","EventEmitter","Component","Inject","ViewChild","Output","forwardRef","Input","NgModule","NG_VALUE_ACCESSOR","fromEvent","CommonModule","NGX_MONACO_EDITOR_CONFIG","loadedMonaco","loadPromise","BaseEditor","constructor","config","onInit","ngAfterViewInit","then","initMonaco","_options","Promise","resolve","baseUrl","window","monaco","onGotAmdLoader","require","paths","onMonacoLoad","loaderScript","document","createElement","type","src","addEventListener","body","appendChild","ngOnDestroy","_windowResizeSubscription","unsubscribe","_editor","dispose","undefined","ɵfac","ɵcmp","args","template","decorators","_editorContainer","static","EditorComponent","zone","editorConfig","_value","propagateChange","_","onTouched","options","Object","assign","defaultOptions","model","writeValue","value","setTimeout","setValue","registerOnChange","fn","registerOnTouched","hasModel","editor","getModel","uri","createModel","language","create","nativeElement","onDidChangeModelContent","e","getValue","run","onDidBlurEditorWidget","subscribe","layout","emit","NgZone","provide","useExisting","multi","selector","styles","providers","DiffEditorComponent","originalModel","_originalModel","modifiedModel","_modifiedModel","Error","code","innerHTML","theme","createDiffEditor","setModel","original","modified","MonacoEditorModule","forRoot","ngModule","useValue","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, Inject, ViewChild, Output, forwardRef, Input, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\nconst NGX_MONACO_EDITOR_CONFIG = new InjectionToken('NGX_MONACO_EDITOR_CONFIG');\n\nlet loadedMonaco = false;\nlet loadPromise;\nclass BaseEditor {\n    constructor(config) {\n        this.config = config;\n        this.onInit = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        if (loadedMonaco) {\n            // Wait until monaco editor is available\n            loadPromise.then(() => {\n                this.initMonaco(this._options);\n            });\n        }\n        else {\n            loadedMonaco = true;\n            loadPromise = new Promise((resolve) => {\n                const baseUrl = (this.config.baseUrl || './assets') + '/monaco-editor/min/vs';\n                if (typeof (window.monaco) === 'object') {\n                    resolve();\n                    return;\n                }\n                const onGotAmdLoader = () => {\n                    // Load monaco\n                    window.require.config({ paths: { 'vs': `${baseUrl}` } });\n                    window.require([`vs/editor/editor.main`], () => {\n                        if (typeof this.config.onMonacoLoad === 'function') {\n                            this.config.onMonacoLoad();\n                        }\n                        this.initMonaco(this._options);\n                        resolve();\n                    });\n                };\n                // Load AMD loader if necessary\n                if (!window.require) {\n                    const loaderScript = document.createElement('script');\n                    loaderScript.type = 'text/javascript';\n                    loaderScript.src = `${baseUrl}/loader.js`;\n                    loaderScript.addEventListener('load', onGotAmdLoader);\n                    document.body.appendChild(loaderScript);\n                }\n                else {\n                    onGotAmdLoader();\n                }\n            });\n        }\n    }\n    ngOnDestroy() {\n        if (this._windowResizeSubscription) {\n            this._windowResizeSubscription.unsubscribe();\n        }\n        if (this._editor) {\n            this._editor.dispose();\n            this._editor = undefined;\n        }\n    }\n}\nBaseEditor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: BaseEditor, deps: [{ token: NGX_MONACO_EDITOR_CONFIG }], target: i0.ɵɵFactoryTarget.Component });\nBaseEditor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: BaseEditor, selector: \"ng-component\", outputs: { onInit: \"onInit\" }, viewQueries: [{ propertyName: \"_editorContainer\", first: true, predicate: [\"editorContainer\"], descendants: true, static: true }], ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: BaseEditor, decorators: [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_MONACO_EDITOR_CONFIG]\n                }] }]; }, propDecorators: { _editorContainer: [{\n                type: ViewChild,\n                args: ['editorContainer', { static: true }]\n            }], onInit: [{\n                type: Output\n            }] } });\n\nclass EditorComponent extends BaseEditor {\n    constructor(zone, editorConfig) {\n        super(editorConfig);\n        this.zone = zone;\n        this.editorConfig = editorConfig;\n        this._value = '';\n        this.propagateChange = (_) => { };\n        this.onTouched = () => { };\n    }\n    set options(options) {\n        this._options = Object.assign({}, this.config.defaultOptions, options);\n        if (this._editor) {\n            this._editor.dispose();\n            this.initMonaco(options);\n        }\n    }\n    get options() {\n        return this._options;\n    }\n    set model(model) {\n        this.options.model = model;\n        if (this._editor) {\n            this._editor.dispose();\n            this.initMonaco(this.options);\n        }\n    }\n    writeValue(value) {\n        this._value = value || '';\n        // Fix for value change while dispose in process.\n        setTimeout(() => {\n            if (this._editor && !this.options.model) {\n                this._editor.setValue(this._value);\n            }\n        });\n    }\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    initMonaco(options) {\n        const hasModel = !!options.model;\n        if (hasModel) {\n            const model = monaco.editor.getModel(options.model.uri || '');\n            if (model) {\n                options.model = model;\n                options.model.setValue(this._value);\n            }\n            else {\n                options.model = monaco.editor.createModel(options.model.value, options.model.language, options.model.uri);\n            }\n        }\n        this._editor = monaco.editor.create(this._editorContainer.nativeElement, options);\n        if (!hasModel) {\n            this._editor.setValue(this._value);\n        }\n        this._editor.onDidChangeModelContent((e) => {\n            const value = this._editor.getValue();\n            // value is not propagated to parent when executing outside zone.\n            this.zone.run(() => {\n                this.propagateChange(value);\n                this._value = value;\n            });\n        });\n        this._editor.onDidBlurEditorWidget(() => {\n            this.onTouched();\n        });\n        // refresh layout on resize event.\n        if (this._windowResizeSubscription) {\n            this._windowResizeSubscription.unsubscribe();\n        }\n        this._windowResizeSubscription = fromEvent(window, 'resize').subscribe(() => this._editor.layout());\n        this.onInit.emit(this._editor);\n    }\n}\nEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: EditorComponent, deps: [{ token: i0.NgZone }, { token: NGX_MONACO_EDITOR_CONFIG }], target: i0.ɵɵFactoryTarget.Component });\nEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: EditorComponent, selector: \"ngx-monaco-editor\", inputs: { options: \"options\", model: \"model\" }, providers: [{\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => EditorComponent),\n            multi: true\n        }], usesInheritance: true, ngImport: i0, template: '<div class=\"editor-container\" #editorContainer></div>', isInline: true, styles: [\"\\n      :host {\\n          display: block;\\n          height: 200px;\\n      }\\n\\n      .editor-container {\\n          width: 100%;\\n          height: 98%;\\n      }\\n  \"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: EditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-monaco-editor',\n                    template: '<div class=\"editor-container\" #editorContainer></div>',\n                    styles: [`\n      :host {\n          display: block;\n          height: 200px;\n      }\n\n      .editor-container {\n          width: 100%;\n          height: 98%;\n      }\n  `],\n                    providers: [{\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => EditorComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_MONACO_EDITOR_CONFIG]\n                }] }]; }, propDecorators: { options: [{\n                type: Input,\n                args: ['options']\n            }], model: [{\n                type: Input,\n                args: ['model']\n            }] } });\n\nclass DiffEditorComponent extends BaseEditor {\n    constructor(editorConfig) {\n        super(editorConfig);\n        this.editorConfig = editorConfig;\n    }\n    set options(options) {\n        this._options = Object.assign({}, this.config.defaultOptions, options);\n        if (this._editor) {\n            this._editor.dispose();\n            this.initMonaco(options);\n        }\n    }\n    get options() {\n        return this._options;\n    }\n    set originalModel(model) {\n        this._originalModel = model;\n        if (this._editor) {\n            this._editor.dispose();\n            this.initMonaco(this.options);\n        }\n    }\n    set modifiedModel(model) {\n        this._modifiedModel = model;\n        if (this._editor) {\n            this._editor.dispose();\n            this.initMonaco(this.options);\n        }\n    }\n    initMonaco(options) {\n        if (!this._originalModel || !this._modifiedModel) {\n            throw new Error('originalModel or modifiedModel not found for ngx-monaco-diff-editor');\n        }\n        this._originalModel.language = this._originalModel.language || options.language;\n        this._modifiedModel.language = this._modifiedModel.language || options.language;\n        let originalModel = monaco.editor.createModel(this._originalModel.code, this._originalModel.language);\n        let modifiedModel = monaco.editor.createModel(this._modifiedModel.code, this._modifiedModel.language);\n        this._editorContainer.nativeElement.innerHTML = '';\n        const theme = options.theme;\n        this._editor = monaco.editor.createDiffEditor(this._editorContainer.nativeElement, options);\n        options.theme = theme;\n        this._editor.setModel({\n            original: originalModel,\n            modified: modifiedModel\n        });\n        // refresh layout on resize event.\n        if (this._windowResizeSubscription) {\n            this._windowResizeSubscription.unsubscribe();\n        }\n        this._windowResizeSubscription = fromEvent(window, 'resize').subscribe(() => this._editor.layout());\n        this.onInit.emit(this._editor);\n    }\n}\nDiffEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: DiffEditorComponent, deps: [{ token: NGX_MONACO_EDITOR_CONFIG }], target: i0.ɵɵFactoryTarget.Component });\nDiffEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: DiffEditorComponent, selector: \"ngx-monaco-diff-editor\", inputs: { options: \"options\", originalModel: \"originalModel\", modifiedModel: \"modifiedModel\" }, usesInheritance: true, ngImport: i0, template: '<div class=\"editor-container\" #editorContainer></div>', isInline: true, styles: [\"\\n    :host {\\n      display: block;\\n      height: 200px;\\n    }\\n\\n    .editor-container {\\n      width: 100%;\\n      height: 98%;\\n    }\\n  \"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: DiffEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-monaco-diff-editor',\n                    template: '<div class=\"editor-container\" #editorContainer></div>',\n                    styles: [`\n    :host {\n      display: block;\n      height: 200px;\n    }\n\n    .editor-container {\n      width: 100%;\n      height: 98%;\n    }\n  `]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_MONACO_EDITOR_CONFIG]\n                }] }]; }, propDecorators: { options: [{\n                type: Input,\n                args: ['options']\n            }], originalModel: [{\n                type: Input,\n                args: ['originalModel']\n            }], modifiedModel: [{\n                type: Input,\n                args: ['modifiedModel']\n            }] } });\n\nclass MonacoEditorModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: MonacoEditorModule,\n            providers: [\n                { provide: NGX_MONACO_EDITOR_CONFIG, useValue: config }\n            ]\n        };\n    }\n}\nMonacoEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MonacoEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMonacoEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MonacoEditorModule, declarations: [EditorComponent,\n        DiffEditorComponent], imports: [CommonModule], exports: [EditorComponent,\n        DiffEditorComponent] });\nMonacoEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MonacoEditorModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MonacoEditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule\n                    ],\n                    declarations: [\n                        EditorComponent,\n                        DiffEditorComponent\n                    ],\n                    exports: [\n                        EditorComponent,\n                        DiffEditorComponent\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DiffEditorComponent, EditorComponent, MonacoEditorModule, NGX_MONACO_EDITOR_CONFIG };\n"]},"metadata":{},"sourceType":"module"}