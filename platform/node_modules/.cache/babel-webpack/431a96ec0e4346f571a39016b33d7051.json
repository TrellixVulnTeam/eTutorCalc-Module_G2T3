{"ast":null,"code":"import _asyncToGenerator from \"/Users/laurenzhinterholzer/Documents/WIN/WIN 2022S/BAC WIN/platform/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { TaskAssignmentType, TaskDifficulty } from 'app/overview/tasks/task.model'; // noinspection JSIgnoredPromiseFromCall\n\n/**\n * Component for displaying students' tasks.\n */\n\nlet StudentTaskComponent = class StudentTaskComponent {\n  /**\n   * Constructor.\n   *\n   * @param router the injected router\n   * @param location the injected location service\n   * @param activatedRoute the injected activated route\n   * @param taskService the injected task service\n   * @param studentService the injected student service\n   * @param taskGroupService the injected task group service\n   */\n  constructor(router, location, activatedRoute, taskService, studentService, taskGroupService, fileService) {\n    this.router = router;\n    this.location = location;\n    this.activatedRoute = activatedRoute;\n    this.taskService = taskService;\n    this.studentService = studentService;\n    this.taskGroupService = taskGroupService;\n    this.fileService = fileService;\n    this.isSaving = false;\n    this.isSubmitted = true;\n    this.exerciseSheetAlreadyClosed = false;\n    this.isUploadTask = false;\n    this.isCalcTask = false;\n    this.isDispatcherTask = true;\n    this.uploadTaskFileId = -1;\n    this.uploadCalcSubmissionFileId = -1;\n    this.exercise_id = '';\n    this.task_type = '';\n    this.submission = '';\n    this.diagnoseLevel = 0;\n    this.dispatcherPoints = 0;\n    this.maxPoints = '';\n    this.diagnoseLevelWeighting = '';\n    this.uploadFileId = -1;\n    this.calcIndividualInstructionFileId = -1;\n    this.calcSolutionFileId = -1;\n    this._exerciseSheetUUID = '';\n    this._taskUUID = '';\n    this._taskNo = 0;\n    const nav = this.router.getCurrentNavigation();\n\n    if (nav === null || nav === void 0 ? void 0 : nav.extras.state) {\n      this._instance = nav.extras.state.instance;\n      this.exerciseSheetAlreadyClosed = nav.extras.state.closed;\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n  /**\n   * Implements the init method. See {@link OnInit}.\n   */\n\n\n  ngOnInit() {\n    var _this = this;\n\n    this._paramMapSubscription = this.activatedRoute.paramMap.subscribe(paramMap => {\n      this._exerciseSheetUUID = paramMap.get('exerciseSheetUUID');\n      this._taskUUID = paramMap.get('taskUUID');\n      this._taskNo = Number(paramMap.get('taskNo'));\n\n      _asyncToGenerator(function* () {\n        var _a;\n\n        const result = yield _this.taskService.getTaskAssignmentById(_this._taskUUID, true).toPromise();\n        _this._taskModel = result.body;\n        _this.uploadFileId = (_a = _this._taskModel.uploadFileId) !== null && _a !== void 0 ? _a : -1;\n        _this.isUploadTask = _this._taskModel.taskAssignmentTypeId === TaskAssignmentType.UploadTask.value;\n        _this.isCalcTask = _this._taskModel.taskAssignmentTypeId === TaskAssignmentType.CalcTask.value;\n        _this.isDispatcherTask = _this._taskModel.taskAssignmentTypeId === TaskAssignmentType.SQLTask.value || _this._taskModel.taskAssignmentTypeId === TaskAssignmentType.RATask.value || _this._taskModel.taskAssignmentTypeId === TaskAssignmentType.XQueryTask.value || _this._taskModel.taskAssignmentTypeId === TaskAssignmentType.DatalogTask.value;\n\n        if (_this.isDispatcherTask) {\n          _this.task_type = _this._taskModel.taskAssignmentTypeId;\n\n          if (_this._taskModel.taskIdForDispatcher) {\n            _this.exercise_id = _this._taskModel.taskIdForDispatcher;\n          }\n\n          if (_this._taskModel.maxPoints) {\n            _this.maxPoints = _this._taskModel.maxPoints;\n          }\n\n          if (_this._taskModel.diagnoseLevelWeighting) {\n            _this.diagnoseLevelWeighting = _this._taskModel.diagnoseLevelWeighting;\n          }\n\n          _this._taskModel.taskGroupId;\n          _this.submission = yield _this.studentService.getSubmissionForAssignment(_this._instance.instanceId, _this._exerciseSheetUUID, _this._taskNo).toPromise();\n          _this.dispatcherPoints = yield _this.studentService.getDispatcherPoints(_this._instance.instanceId, _this._exerciseSheetUUID, _this._taskNo).toPromise();\n          _this.diagnoseLevel = yield _this.studentService.getDiagnoseLevel(_this._instance.instanceId, _this._exerciseSheetUUID, _this._taskNo).toPromise();\n        }\n\n        if (_this.isUploadTask) {\n          _this.uploadTaskFileId = yield _this.studentService.getFileAttachmentId(_this._instance.instanceId, _this._exerciseSheetUUID, _this._taskNo).toPromise();\n        }\n\n        if (_this.isCalcTask) {\n          _this.uploadCalcSubmissionFileId = yield _this.studentService.getFileAttachmentId(_this._instance.instanceId, _this._exerciseSheetUUID, _this._taskNo).toPromise();\n          _this.calcIndividualInstructionFileId = yield _this.studentService.getFileAttachmentIdOfIndividualCalcInstruction(_this._instance.instanceId, _this._exerciseSheetUUID, _this._taskNo).toPromise();\n          _this.calcSolutionFileId = yield _this.taskService.getFileIdOfCalcSolution(_this._taskUUID, true).toPromise();\n\n          _this.studentService.getMatriculationNumberOfLoggedInStudent().subscribe(data => {\n            _this.matriculationNumber = data;\n          });\n\n          _this.updateCalcTaskPoints();\n        }\n\n        const taskGroupId = _this._taskModel.taskGroupId;\n\n        if (taskGroupId) {\n          _this.taskGroupService.getTaskGroup(taskGroupId.substr(taskGroupId.indexOf('#') + 1)).subscribe(taskGroup => _this.taskGroup = taskGroup);\n        }\n      })();\n\n      _asyncToGenerator(function* () {\n        _this.isSubmitted = yield _this.studentService.isTaskSubmitted(_this._instance.instanceId, _this._exerciseSheetUUID, _this._taskNo).toPromise();\n      })();\n    });\n  }\n  /**\n   * Implements the destroy method. See {@link OnDestroy}.\n   */\n\n\n  ngOnDestroy() {\n    var _a;\n\n    (_a = this._paramMapSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n  }\n  /**\n   * Returns the task model.\n   */\n\n\n  get taskModel() {\n    return this._taskModel;\n  }\n  /**\n   * Navigates back.\n   */\n\n\n  navigateBack() {\n    this.location.back();\n  }\n  /**\n   * Returns the i18n string of a given difficulty url.\n   *\n   * @param url the url\n   */\n\n\n  getDifficultyI18nString(url) {\n    if (!url) {\n      return '';\n    }\n\n    return TaskDifficulty.fromString(url).text;\n  }\n  /**\n   * Asynchronously marks the task as submitted.\n   */\n\n\n  markTaskAsSubmittedAsync() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.isSaving = true;\n\n      try {\n        yield _this2.studentService.markTaskAsSubmitted(_this2._instance.instanceId, _this2._exerciseSheetUUID, _this2._taskNo).toPromise();\n      } catch (e) {\n        _this2.isSaving = false;\n        throw e;\n      }\n\n      _this2.isSubmitted = true;\n      _this2.isSaving = false;\n    })();\n  }\n  /**\n   * Asynchronously adds the file.\n   *\n   * @param fileId the file to add\n   */\n\n\n  handleFileAddedAsync(fileId) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.studentService.setUploadTaskAttachment(_this3._instance.instanceId, _this3._exerciseSheetUUID, _this3._taskNo, fileId).toPromise();\n      _this3.uploadTaskFileId = fileId;\n    })();\n  }\n  /**\n   * Asynchronously removes the file.\n   *\n   * @param fileId the file to remove\n   */\n\n\n  handleFileRemovedAsync(fileId) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this4.studentService.removeUploadTaskAttachment(_this4._instance.instanceId, _this4._exerciseSheetUUID, _this4._taskNo, fileId).toPromise();\n      _this4.uploadTaskFileId = -1;\n    })();\n  }\n  /**\n   * Asynchronously sets a modified file.\n   *\n   * @param oldFileId the file's old id\n   * @param newFileId the file's new id\n   */\n\n\n  handleFileMovedAsync(oldFileId, newFileId) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this5.studentService.setUploadTaskAttachment(_this5._instance.instanceId, _this5._exerciseSheetUUID, _this5._taskNo, newFileId).toPromise();\n      _this5.uploadTaskFileId = newFileId;\n    })();\n  }\n  /**\n   * Asynchronously adds the calc file.\n   *\n   * @param fileId\n   */\n\n\n  handleCalcFileAddedAsync(fileId) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this6.studentService.setUploadTaskAttachment(_this6._instance.instanceId, _this6._exerciseSheetUUID, _this6._taskNo, fileId).toPromise();\n\n      _this6.fileService.getFileMetaData(fileId).subscribe(data => {\n        if (data.contentType === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\n          _this6.uploadCalcSubmissionFileId = fileId;\n        } else {\n          _this6.uploadCalcSubmissionFileId = -2;\n        }\n      });\n    })();\n  }\n  /**\n   * Asynchronously removes the calc file.\n   *\n   * @param fileId\n   */\n\n\n  handleCalcFileRemovedAsync(fileId) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this7.studentService.removeUploadTaskAttachment(_this7._instance.instanceId, _this7._exerciseSheetUUID, _this7._taskNo, fileId).toPromise();\n      _this7.uploadCalcSubmissionFileId = -1;\n    })();\n  }\n  /**\n   * Asynchronously sets a modified calc file.\n   *\n   * @param oldFileId the file's old id\n   * @param newFileId the file's new id\n   */\n\n\n  handleCalcFileMovedAsync(oldFileId, newFileId) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this8.studentService.setUploadTaskAttachment(_this8._instance.instanceId, _this8._exerciseSheetUUID, _this8._taskNo, newFileId).toPromise();\n\n      _this8.fileService.getFileMetaData(newFileId).subscribe(data => {\n        if (data.contentType === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\n          _this8.uploadCalcSubmissionFileId = newFileId;\n        } else {\n          _this8.uploadCalcSubmissionFileId = -2;\n        }\n      });\n    })();\n  }\n  /**\n   * corrects the submitted calc tasks and saves the feedback on .calcCorrectionFeedback\n   */\n\n\n  correctCalcTask() {\n    if (this.uploadCalcSubmissionFileId !== -1 && this.uploadCalcSubmissionFileId !== -2 && this.calcSolutionFileId !== -1 && this.calcIndividualInstructionFileId !== -1) {\n      this.studentService.getCorrectionOfCalcTask(this.calcIndividualInstructionFileId, this.calcSolutionFileId, this.uploadCalcSubmissionFileId).subscribe(data => {\n        this.calcCorrectionFeedback = data;\n      });\n    }\n  }\n\n  submitCalcTask() {\n    if (this.uploadCalcSubmissionFileId !== -1 && this.uploadCalcSubmissionFileId !== -2 && this.calcSolutionFileId !== -1 && this.calcIndividualInstructionFileId !== -1 && this.matriculationNumber !== undefined && this._instance !== undefined) {\n      this.studentService.handleCalcTaskSubmission(this.matriculationNumber, this._instance.instanceId, this._exerciseSheetUUID, this._taskNo, this.calcIndividualInstructionFileId, this.calcSolutionFileId, this.uploadCalcSubmissionFileId).toPromise();\n      this.updateCalcTaskPoints();\n    }\n  }\n  /**\n   * Redirects the UUID from the dispatcher to the server\n   * @param $event the UUID\n   */\n\n\n  handleDispatcherUUID($event) {\n    this.studentService.handleDispatcherUUID(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo, $event).subscribe();\n  }\n\n  updateCalcTaskPoints() {\n    if (this._instance !== undefined) {\n      this.studentService.getDispatcherPoints(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo).subscribe(data => {\n        this.calcTaskPoints = data;\n      });\n    }\n  }\n\n};\nStudentTaskComponent = __decorate([Component({\n  selector: 'jhi-student-task',\n  templateUrl: './student-task.component.html',\n  styleUrls: ['./student-task.component.scss']\n})], StudentTaskComponent);\nexport { StudentTaskComponent };","map":{"version":3,"sources":["/Users/laurenzhinterholzer/Documents/WIN/WIN 2022S/BAC WIN/platform/src/main/webapp/app/overview/student-overview/course-task-overview/student-task/student-task.component.ts"],"names":["__decorate","Component","TaskAssignmentType","TaskDifficulty","StudentTaskComponent","constructor","router","location","activatedRoute","taskService","studentService","taskGroupService","fileService","isSaving","isSubmitted","exerciseSheetAlreadyClosed","isUploadTask","isCalcTask","isDispatcherTask","uploadTaskFileId","uploadCalcSubmissionFileId","exercise_id","task_type","submission","diagnoseLevel","dispatcherPoints","maxPoints","diagnoseLevelWeighting","uploadFileId","calcIndividualInstructionFileId","calcSolutionFileId","_exerciseSheetUUID","_taskUUID","_taskNo","nav","getCurrentNavigation","extras","state","_instance","instance","closed","navigate","ngOnInit","_paramMapSubscription","paramMap","subscribe","get","Number","_a","result","getTaskAssignmentById","toPromise","_taskModel","body","taskAssignmentTypeId","UploadTask","value","CalcTask","SQLTask","RATask","XQueryTask","DatalogTask","taskIdForDispatcher","taskGroupId","getSubmissionForAssignment","instanceId","getDispatcherPoints","getDiagnoseLevel","getFileAttachmentId","getFileAttachmentIdOfIndividualCalcInstruction","getFileIdOfCalcSolution","getMatriculationNumberOfLoggedInStudent","data","matriculationNumber","updateCalcTaskPoints","getTaskGroup","substr","indexOf","taskGroup","isTaskSubmitted","ngOnDestroy","unsubscribe","taskModel","navigateBack","back","getDifficultyI18nString","url","fromString","text","markTaskAsSubmittedAsync","markTaskAsSubmitted","e","handleFileAddedAsync","fileId","setUploadTaskAttachment","handleFileRemovedAsync","removeUploadTaskAttachment","handleFileMovedAsync","oldFileId","newFileId","handleCalcFileAddedAsync","getFileMetaData","contentType","handleCalcFileRemovedAsync","handleCalcFileMovedAsync","correctCalcTask","getCorrectionOfCalcTask","calcCorrectionFeedback","submitCalcTask","undefined","handleCalcTaskSubmission","handleDispatcherUUID","$event","calcTaskPoints","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { TaskAssignmentType, TaskDifficulty } from 'app/overview/tasks/task.model';\n// noinspection JSIgnoredPromiseFromCall\n/**\n * Component for displaying students' tasks.\n */\nlet StudentTaskComponent = class StudentTaskComponent {\n    /**\n     * Constructor.\n     *\n     * @param router the injected router\n     * @param location the injected location service\n     * @param activatedRoute the injected activated route\n     * @param taskService the injected task service\n     * @param studentService the injected student service\n     * @param taskGroupService the injected task group service\n     */\n    constructor(router, location, activatedRoute, taskService, studentService, taskGroupService, fileService) {\n        this.router = router;\n        this.location = location;\n        this.activatedRoute = activatedRoute;\n        this.taskService = taskService;\n        this.studentService = studentService;\n        this.taskGroupService = taskGroupService;\n        this.fileService = fileService;\n        this.isSaving = false;\n        this.isSubmitted = true;\n        this.exerciseSheetAlreadyClosed = false;\n        this.isUploadTask = false;\n        this.isCalcTask = false;\n        this.isDispatcherTask = true;\n        this.uploadTaskFileId = -1;\n        this.uploadCalcSubmissionFileId = -1;\n        this.exercise_id = '';\n        this.task_type = '';\n        this.submission = '';\n        this.diagnoseLevel = 0;\n        this.dispatcherPoints = 0;\n        this.maxPoints = '';\n        this.diagnoseLevelWeighting = '';\n        this.uploadFileId = -1;\n        this.calcIndividualInstructionFileId = -1;\n        this.calcSolutionFileId = -1;\n        this._exerciseSheetUUID = '';\n        this._taskUUID = '';\n        this._taskNo = 0;\n        const nav = this.router.getCurrentNavigation();\n        if (nav === null || nav === void 0 ? void 0 : nav.extras.state) {\n            this._instance = nav.extras.state.instance;\n            this.exerciseSheetAlreadyClosed = nav.extras.state.closed;\n        }\n        else {\n            this.router.navigate(['/']);\n        }\n    }\n    /**\n     * Implements the init method. See {@link OnInit}.\n     */\n    ngOnInit() {\n        this._paramMapSubscription = this.activatedRoute.paramMap.subscribe(paramMap => {\n            this._exerciseSheetUUID = paramMap.get('exerciseSheetUUID');\n            this._taskUUID = paramMap.get('taskUUID');\n            this._taskNo = Number(paramMap.get('taskNo'));\n            (async () => {\n                var _a;\n                const result = await this.taskService.getTaskAssignmentById(this._taskUUID, true).toPromise();\n                this._taskModel = result.body;\n                this.uploadFileId = (_a = this._taskModel.uploadFileId) !== null && _a !== void 0 ? _a : -1;\n                this.isUploadTask = this._taskModel.taskAssignmentTypeId === TaskAssignmentType.UploadTask.value;\n                this.isCalcTask = this._taskModel.taskAssignmentTypeId === TaskAssignmentType.CalcTask.value;\n                this.isDispatcherTask =\n                    this._taskModel.taskAssignmentTypeId === TaskAssignmentType.SQLTask.value ||\n                        this._taskModel.taskAssignmentTypeId === TaskAssignmentType.RATask.value ||\n                        this._taskModel.taskAssignmentTypeId === TaskAssignmentType.XQueryTask.value ||\n                        this._taskModel.taskAssignmentTypeId === TaskAssignmentType.DatalogTask.value;\n                if (this.isDispatcherTask) {\n                    this.task_type = this._taskModel.taskAssignmentTypeId;\n                    if (this._taskModel.taskIdForDispatcher) {\n                        this.exercise_id = this._taskModel.taskIdForDispatcher;\n                    }\n                    if (this._taskModel.maxPoints) {\n                        this.maxPoints = this._taskModel.maxPoints;\n                    }\n                    if (this._taskModel.diagnoseLevelWeighting) {\n                        this.diagnoseLevelWeighting = this._taskModel.diagnoseLevelWeighting;\n                    }\n                    this._taskModel.taskGroupId;\n                    this.submission = await this.studentService\n                        .getSubmissionForAssignment(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo)\n                        .toPromise();\n                    this.dispatcherPoints = await this.studentService\n                        .getDispatcherPoints(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo)\n                        .toPromise();\n                    this.diagnoseLevel = await this.studentService\n                        .getDiagnoseLevel(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo)\n                        .toPromise();\n                }\n                if (this.isUploadTask) {\n                    this.uploadTaskFileId = await this.studentService\n                        .getFileAttachmentId(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo)\n                        .toPromise();\n                }\n                if (this.isCalcTask) {\n                    this.uploadCalcSubmissionFileId = await this.studentService\n                        .getFileAttachmentId(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo)\n                        .toPromise();\n                    this.calcIndividualInstructionFileId = await this.studentService\n                        .getFileAttachmentIdOfIndividualCalcInstruction(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo)\n                        .toPromise();\n                    this.calcSolutionFileId = await this.taskService.getFileIdOfCalcSolution(this._taskUUID, true).toPromise();\n                    this.studentService.getMatriculationNumberOfLoggedInStudent().subscribe(data => {\n                        this.matriculationNumber = data;\n                    });\n                    this.updateCalcTaskPoints();\n                }\n                const taskGroupId = this._taskModel.taskGroupId;\n                if (taskGroupId) {\n                    this.taskGroupService\n                        .getTaskGroup(taskGroupId.substr(taskGroupId.indexOf('#') + 1))\n                        .subscribe(taskGroup => (this.taskGroup = taskGroup));\n                }\n            })();\n            (async () => {\n                this.isSubmitted = await this.studentService\n                    .isTaskSubmitted(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo)\n                    .toPromise();\n            })();\n        });\n    }\n    /**\n     * Implements the destroy method. See {@link OnDestroy}.\n     */\n    ngOnDestroy() {\n        var _a;\n        (_a = this._paramMapSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n    /**\n     * Returns the task model.\n     */\n    get taskModel() {\n        return this._taskModel;\n    }\n    /**\n     * Navigates back.\n     */\n    navigateBack() {\n        this.location.back();\n    }\n    /**\n     * Returns the i18n string of a given difficulty url.\n     *\n     * @param url the url\n     */\n    getDifficultyI18nString(url) {\n        if (!url) {\n            return '';\n        }\n        return TaskDifficulty.fromString(url).text;\n    }\n    /**\n     * Asynchronously marks the task as submitted.\n     */\n    async markTaskAsSubmittedAsync() {\n        this.isSaving = true;\n        try {\n            await this.studentService.markTaskAsSubmitted(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo).toPromise();\n        }\n        catch (e) {\n            this.isSaving = false;\n            throw e;\n        }\n        this.isSubmitted = true;\n        this.isSaving = false;\n    }\n    /**\n     * Asynchronously adds the file.\n     *\n     * @param fileId the file to add\n     */\n    async handleFileAddedAsync(fileId) {\n        await this.studentService\n            .setUploadTaskAttachment(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo, fileId)\n            .toPromise();\n        this.uploadTaskFileId = fileId;\n    }\n    /**\n     * Asynchronously removes the file.\n     *\n     * @param fileId the file to remove\n     */\n    async handleFileRemovedAsync(fileId) {\n        await this.studentService\n            .removeUploadTaskAttachment(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo, fileId)\n            .toPromise();\n        this.uploadTaskFileId = -1;\n    }\n    /**\n     * Asynchronously sets a modified file.\n     *\n     * @param oldFileId the file's old id\n     * @param newFileId the file's new id\n     */\n    async handleFileMovedAsync(oldFileId, newFileId) {\n        await this.studentService\n            .setUploadTaskAttachment(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo, newFileId)\n            .toPromise();\n        this.uploadTaskFileId = newFileId;\n    }\n    /**\n     * Asynchronously adds the calc file.\n     *\n     * @param fileId\n     */\n    async handleCalcFileAddedAsync(fileId) {\n        await this.studentService\n            .setUploadTaskAttachment(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo, fileId)\n            .toPromise();\n        this.fileService.getFileMetaData(fileId).subscribe(data => {\n            if (data.contentType === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\n                this.uploadCalcSubmissionFileId = fileId;\n            }\n            else {\n                this.uploadCalcSubmissionFileId = -2;\n            }\n        });\n    }\n    /**\n     * Asynchronously removes the calc file.\n     *\n     * @param fileId\n     */\n    async handleCalcFileRemovedAsync(fileId) {\n        await this.studentService\n            .removeUploadTaskAttachment(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo, fileId)\n            .toPromise();\n        this.uploadCalcSubmissionFileId = -1;\n    }\n    /**\n     * Asynchronously sets a modified calc file.\n     *\n     * @param oldFileId the file's old id\n     * @param newFileId the file's new id\n     */\n    async handleCalcFileMovedAsync(oldFileId, newFileId) {\n        await this.studentService\n            .setUploadTaskAttachment(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo, newFileId)\n            .toPromise();\n        this.fileService.getFileMetaData(newFileId).subscribe(data => {\n            if (data.contentType === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\n                this.uploadCalcSubmissionFileId = newFileId;\n            }\n            else {\n                this.uploadCalcSubmissionFileId = -2;\n            }\n        });\n    }\n    /**\n     * corrects the submitted calc tasks and saves the feedback on .calcCorrectionFeedback\n     */\n    correctCalcTask() {\n        if (this.uploadCalcSubmissionFileId !== -1 &&\n            this.uploadCalcSubmissionFileId !== -2 &&\n            this.calcSolutionFileId !== -1 &&\n            this.calcIndividualInstructionFileId !== -1) {\n            this.studentService\n                .getCorrectionOfCalcTask(this.calcIndividualInstructionFileId, this.calcSolutionFileId, this.uploadCalcSubmissionFileId)\n                .subscribe(data => {\n                this.calcCorrectionFeedback = data;\n            });\n        }\n    }\n    submitCalcTask() {\n        if (this.uploadCalcSubmissionFileId !== -1 &&\n            this.uploadCalcSubmissionFileId !== -2 &&\n            this.calcSolutionFileId !== -1 &&\n            this.calcIndividualInstructionFileId !== -1 &&\n            this.matriculationNumber !== undefined &&\n            this._instance !== undefined) {\n            this.studentService\n                .handleCalcTaskSubmission(this.matriculationNumber, this._instance.instanceId, this._exerciseSheetUUID, this._taskNo, this.calcIndividualInstructionFileId, this.calcSolutionFileId, this.uploadCalcSubmissionFileId)\n                .toPromise();\n            this.updateCalcTaskPoints();\n        }\n    }\n    /**\n     * Redirects the UUID from the dispatcher to the server\n     * @param $event the UUID\n     */\n    handleDispatcherUUID($event) {\n        this.studentService.handleDispatcherUUID(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo, $event).subscribe();\n    }\n    updateCalcTaskPoints() {\n        if (this._instance !== undefined) {\n            this.studentService.getDispatcherPoints(this._instance.instanceId, this._exerciseSheetUUID, this._taskNo).subscribe(data => {\n                this.calcTaskPoints = data;\n            });\n        }\n    }\n};\nStudentTaskComponent = __decorate([\n    Component({\n        selector: 'jhi-student-task',\n        templateUrl: './student-task.component.html',\n        styleUrls: ['./student-task.component.scss'],\n    })\n], StudentTaskComponent);\nexport { StudentTaskComponent };\n"]},"metadata":{},"sourceType":"module"}